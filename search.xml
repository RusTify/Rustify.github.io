<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【每日一题】2020/3/16 第一周</title>
    <url>/2020/03/16/ddd/</url>
    <content><![CDATA[<h1 id="21-合并两个有序链表"><a href="#21-合并两个有序链表" class="headerlink" title="21. 合并两个有序链表"></a>21. 合并两个有序链表</h1><h2 id=""><a href="#" class="headerlink" title=""></a></h2><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">//递归算法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mergeTwoLists</span><span class="params">(l1 *ListNode, l2 *ListNode)</span> *<span class="title">ListNode</span></span> &#123;</span><br><span class="line">    <span class="comment">// 其中任一条为空，返回另外一条</span></span><br><span class="line">    <span class="keyword">if</span> l1== <span class="literal">nil</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> l2</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span> l2== <span class="literal">nil</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> l1</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> result *ListNode</span><br><span class="line">    <span class="comment">// 将较小的节点放入</span></span><br><span class="line">    <span class="keyword">if</span> l1.Val &gt;= l2.Val&#123;</span><br><span class="line">        result = l2</span><br><span class="line">        result.Next = mergeTwoLists(l1,l2.Next)</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        result = l1</span><br><span class="line">        result.Next = mergeTwoLists(l1.Next,l2)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * type ListNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Next *ListNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mergeTwoLists</span><span class="params">(l1 *ListNode, l2 *ListNode)</span> *<span class="title">ListNode</span></span> &#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">var</span>  res *ListNode</span><br><span class="line">    res = &amp;ListNode&#123;&#125;</span><br><span class="line">    head := res</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> l1!=<span class="literal">nil</span>&amp;&amp;l2!=<span class="literal">nil</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> l1.Val &gt;= l2.Val &#123;  </span><br><span class="line">            res.Next = l2</span><br><span class="line">            res = l2</span><br><span class="line">            l2 = l2.Next</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             res.Next = l1</span><br><span class="line">             res =  l1</span><br><span class="line">             l1 = l1.Next</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> l1!=<span class="literal">nil</span>&#123;</span><br><span class="line">        res.Next = l1</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">if</span> l2!=<span class="literal">nil</span>&#123;</span><br><span class="line">        res.Next = l2</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> head.Next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>每日一题</tag>
      </tags>
  </entry>
</search>
