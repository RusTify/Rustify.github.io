<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>潮汐</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rustify.github.io/"/>
  <updated>2020-03-17T02:48:53.268Z</updated>
  <id>https://rustify.github.io/</id>
  
  <author>
    <name>RusTify</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【每日一题】2020/3/16 第一周</title>
    <link href="https://rustify.github.io/2020/03/16/ddd/"/>
    <id>https://rustify.github.io/2020/03/16/ddd/</id>
    <published>2020-03-16T14:58:40.000Z</published>
    <updated>2020-03-17T02:48:53.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="21-合并两个有序链表"><a href="#21-合并两个有序链表" class="headerlink" title="21. 合并两个有序链表"></a>21. 合并两个有序链表</h1><h2 id=""><a href="#" class="headerlink" title=""></a></h2><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">//递归算法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mergeTwoLists</span><span class="params">(l1 *ListNode, l2 *ListNode)</span> *<span class="title">ListNode</span></span> &#123;</span><br><span class="line">    <span class="comment">// 其中任一条为空，返回另外一条</span></span><br><span class="line">    <span class="keyword">if</span> l1== <span class="literal">nil</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> l2</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span> l2== <span class="literal">nil</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> l1</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> result *ListNode</span><br><span class="line">    <span class="comment">// 将较小的节点放入</span></span><br><span class="line">    <span class="keyword">if</span> l1.Val &gt;= l2.Val&#123;</span><br><span class="line">        result = l2</span><br><span class="line">        result.Next = mergeTwoLists(l1,l2.Next)</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        result = l1</span><br><span class="line">        result.Next = mergeTwoLists(l1.Next,l2)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * type ListNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Next *ListNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mergeTwoLists</span><span class="params">(l1 *ListNode, l2 *ListNode)</span> *<span class="title">ListNode</span></span> &#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">var</span>  res *ListNode</span><br><span class="line">    res = &amp;ListNode&#123;&#125;</span><br><span class="line">    head := res</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> l1!=<span class="literal">nil</span>&amp;&amp;l2!=<span class="literal">nil</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> l1.Val &gt;= l2.Val &#123;  </span><br><span class="line">            res.Next = l2</span><br><span class="line">            res = l2</span><br><span class="line">            l2 = l2.Next</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             res.Next = l1</span><br><span class="line">             res =  l1</span><br><span class="line">             l1 = l1.Next</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> l1!=<span class="literal">nil</span>&#123;</span><br><span class="line">        res.Next = l1</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">if</span> l2!=<span class="literal">nil</span>&#123;</span><br><span class="line">        res.Next = l2</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> head.Next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;21-合并两个有序链表&quot;&gt;&lt;a href=&quot;#21-合并两个有序链表&quot; class=&quot;headerlink&quot; title=&quot;21. 合并两个有序链表&quot;&gt;&lt;/a&gt;21. 合并两个有序链表&lt;/h1&gt;&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="日常" scheme="https://rustify.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="算法" scheme="https://rustify.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="每日一题" scheme="https://rustify.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
</feed>
